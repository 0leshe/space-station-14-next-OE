using Content.Shared._CorvaxNext.CartridgeLoader.Cartridges;
using Content.Shared._CorvaxNext.JaniratorPDAGame;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._CorvaxNext.CartridgeLoader.Cartridges;
[GenerateTypedNameReferences]
public sealed partial class JaniGameUiFragment : BoxContainer
{

    public List<JaniGameHistory> _transactionHistory = new();
    public uint _nextUpgradeCost;
    public uint _balance;
    public uint _upgrades;
    public bool _passiveAccountActive;
    public event Action<JaniGameUiMessageType, uint, uint>? OnMessageSent;
    public JaniGameUiFragment()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
    }
    public void UpdateState(JaniGameUiState state)
    {
        _transactionHistory = state.TransactionHistory;
        _nextUpgradeCost = state.NextUpgradeCost;
        _balance = state.Balance;
        _upgrades = state.Upgrades;
        _passiveAccountActive = state.PassiveAccountActive;
    }
}
